// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: suite.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckLevel int32

const (
	CheckLevel_Error   CheckLevel = 0
	CheckLevel_Warning CheckLevel = 1
)

// Enum value maps for CheckLevel.
var (
	CheckLevel_name = map[int32]string{
		0: "Error",
		1: "Warning",
	}
	CheckLevel_value = map[string]int32{
		"Error":   0,
		"Warning": 1,
	}
)

func (x CheckLevel) Enum() *CheckLevel {
	p := new(CheckLevel)
	*p = x
	return p
}

func (x CheckLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_suite_proto_enumTypes[0].Descriptor()
}

func (CheckLevel) Type() protoreflect.EnumType {
	return &file_suite_proto_enumTypes[0]
}

func (x CheckLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckLevel.Descriptor instead.
func (CheckLevel) EnumDescriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{0}
}

type Check_ComparisonSign int32

const (
	Check_GT  Check_ComparisonSign = 0
	Check_GET Check_ComparisonSign = 1
	Check_EQ  Check_ComparisonSign = 2
	Check_LT  Check_ComparisonSign = 3
	Check_LET Check_ComparisonSign = 4
)

// Enum value maps for Check_ComparisonSign.
var (
	Check_ComparisonSign_name = map[int32]string{
		0: "GT",
		1: "GET",
		2: "EQ",
		3: "LT",
		4: "LET",
	}
	Check_ComparisonSign_value = map[string]int32{
		"GT":  0,
		"GET": 1,
		"EQ":  2,
		"LT":  3,
		"LET": 4,
	}
)

func (x Check_ComparisonSign) Enum() *Check_ComparisonSign {
	p := new(Check_ComparisonSign)
	*p = x
	return p
}

func (x Check_ComparisonSign) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Check_ComparisonSign) Descriptor() protoreflect.EnumDescriptor {
	return file_suite_proto_enumTypes[1].Descriptor()
}

func (Check_ComparisonSign) Type() protoreflect.EnumType {
	return &file_suite_proto_enumTypes[1]
}

func (x Check_ComparisonSign) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Check_ComparisonSign.Descriptor instead.
func (Check_ComparisonSign) EnumDescriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{0, 0}
}

type Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckLevel  CheckLevel          `protobuf:"varint,1,opt,name=checkLevel,proto3,enum=com.ssinchenko.proto.CheckLevel" json:"checkLevel,omitempty"`
	Description string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Constraints []*Check_Constraint `protobuf:"bytes,3,rep,name=constraints,proto3" json:"constraints,omitempty"`
}

func (x *Check) Reset() {
	*x = Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Check) ProtoMessage() {}

func (x *Check) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Check.ProtoReflect.Descriptor instead.
func (*Check) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{0}
}

func (x *Check) GetCheckLevel() CheckLevel {
	if x != nil {
		return x.CheckLevel
	}
	return CheckLevel_Error
}

func (x *Check) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Check) GetConstraints() []*Check_Constraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type AnomalyDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnomalyDetectionStrategy *AnomalyDetectionStrategy            `protobuf:"bytes,1,opt,name=anomaly_detection_strategy,json=anomalyDetectionStrategy,proto3" json:"anomaly_detection_strategy,omitempty"`
	Analyzer                 *Analyzer                            `protobuf:"bytes,2,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	Config                   *AnomalyDetection_AnomalyCheckConfig `protobuf:"bytes,3,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *AnomalyDetection) Reset() {
	*x = AnomalyDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyDetection) ProtoMessage() {}

func (x *AnomalyDetection) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyDetection.ProtoReflect.Descriptor instead.
func (*AnomalyDetection) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{1}
}

func (x *AnomalyDetection) GetAnomalyDetectionStrategy() *AnomalyDetectionStrategy {
	if x != nil {
		return x.AnomalyDetectionStrategy
	}
	return nil
}

func (x *AnomalyDetection) GetAnalyzer() *Analyzer {
	if x != nil {
		return x.Analyzer
	}
	return nil
}

func (x *AnomalyDetection) GetConfig() *AnomalyDetection_AnomalyCheckConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type VerificationSuite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional spark.connect.Plan data = 1;
	Data              []byte      `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"` // TODO: Workaround; actually it is a binary representation
	Checks            []*Check    `protobuf:"bytes,2,rep,name=checks,proto3" json:"checks,omitempty"`
	RequiredAnalyzers []*Analyzer `protobuf:"bytes,3,rep,name=required_analyzers,json=requiredAnalyzers,proto3" json:"required_analyzers,omitempty"` // Analysis in Deequ that is just a wrapper of sequence of Analyzers
	// Anomaly detection part
	//
	// Types that are assignable to Repository:
	//
	//	*VerificationSuite_FileSystemRepository_
	//	*VerificationSuite_SparkTableRepository_
	Repository        isVerificationSuite_Repository `protobuf_oneof:"repository"`
	ResultKey         *VerificationSuite_ResultKey   `protobuf:"bytes,6,opt,name=result_key,json=resultKey,proto3,oneof" json:"result_key,omitempty"`
	AnomalyDetections []*AnomalyDetection            `protobuf:"bytes,7,rep,name=anomaly_detections,json=anomalyDetections,proto3" json:"anomaly_detections,omitempty"`
}

func (x *VerificationSuite) Reset() {
	*x = VerificationSuite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSuite) ProtoMessage() {}

func (x *VerificationSuite) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSuite.ProtoReflect.Descriptor instead.
func (*VerificationSuite) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{2}
}

func (x *VerificationSuite) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerificationSuite) GetChecks() []*Check {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *VerificationSuite) GetRequiredAnalyzers() []*Analyzer {
	if x != nil {
		return x.RequiredAnalyzers
	}
	return nil
}

func (m *VerificationSuite) GetRepository() isVerificationSuite_Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (x *VerificationSuite) GetFileSystemRepository() *VerificationSuite_FileSystemRepository {
	if x, ok := x.GetRepository().(*VerificationSuite_FileSystemRepository_); ok {
		return x.FileSystemRepository
	}
	return nil
}

func (x *VerificationSuite) GetSparkTableRepository() *VerificationSuite_SparkTableRepository {
	if x, ok := x.GetRepository().(*VerificationSuite_SparkTableRepository_); ok {
		return x.SparkTableRepository
	}
	return nil
}

func (x *VerificationSuite) GetResultKey() *VerificationSuite_ResultKey {
	if x != nil {
		return x.ResultKey
	}
	return nil
}

func (x *VerificationSuite) GetAnomalyDetections() []*AnomalyDetection {
	if x != nil {
		return x.AnomalyDetections
	}
	return nil
}

type isVerificationSuite_Repository interface {
	isVerificationSuite_Repository()
}

type VerificationSuite_FileSystemRepository_ struct {
	FileSystemRepository *VerificationSuite_FileSystemRepository `protobuf:"bytes,4,opt,name=file_system_repository,json=fileSystemRepository,proto3,oneof"`
}

type VerificationSuite_SparkTableRepository_ struct {
	SparkTableRepository *VerificationSuite_SparkTableRepository `protobuf:"bytes,5,opt,name=spark_table_repository,json=sparkTableRepository,proto3,oneof"`
}

func (*VerificationSuite_FileSystemRepository_) isVerificationSuite_Repository() {}

func (*VerificationSuite_SparkTableRepository_) isVerificationSuite_Repository() {}

type Check_Constraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In Deequ constraint is built from
	// 1. Analyzer
	// 2. Assertion that is lambda Double -> Bool or Long -> Bool
	// 3. Hint (optional)
	// 4. Name (optional, for a limited amount of Constraints)
	//
	// In this message there is the following:
	// 1. Analyzer
	// 2. Reference value (Double or Long)
	// 3. Comparison sign (>, >=, ==, <, <=)
	// 4. Hint
	// 5. Name
	//
	// TODO: Think about how to extend this message to encode function?
	Analyzer *Analyzer `protobuf:"bytes,1,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	// Types that are assignable to Expectation:
	//
	//	*Check_Constraint_LongExpectation
	//	*Check_Constraint_DoubleExpectation
	Expectation isCheck_Constraint_Expectation `protobuf_oneof:"expectation"`
	Sign        Check_ComparisonSign           `protobuf:"varint,4,opt,name=sign,proto3,enum=com.ssinchenko.proto.Check_ComparisonSign" json:"sign,omitempty"`
	Hint        *string                        `protobuf:"bytes,5,opt,name=hint,proto3,oneof" json:"hint,omitempty"`
	Name        *string                        `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *Check_Constraint) Reset() {
	*x = Check_Constraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Check_Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Check_Constraint) ProtoMessage() {}

func (x *Check_Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Check_Constraint.ProtoReflect.Descriptor instead.
func (*Check_Constraint) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Check_Constraint) GetAnalyzer() *Analyzer {
	if x != nil {
		return x.Analyzer
	}
	return nil
}

func (m *Check_Constraint) GetExpectation() isCheck_Constraint_Expectation {
	if m != nil {
		return m.Expectation
	}
	return nil
}

func (x *Check_Constraint) GetLongExpectation() int64 {
	if x, ok := x.GetExpectation().(*Check_Constraint_LongExpectation); ok {
		return x.LongExpectation
	}
	return 0
}

func (x *Check_Constraint) GetDoubleExpectation() float64 {
	if x, ok := x.GetExpectation().(*Check_Constraint_DoubleExpectation); ok {
		return x.DoubleExpectation
	}
	return 0
}

func (x *Check_Constraint) GetSign() Check_ComparisonSign {
	if x != nil {
		return x.Sign
	}
	return Check_GT
}

func (x *Check_Constraint) GetHint() string {
	if x != nil && x.Hint != nil {
		return *x.Hint
	}
	return ""
}

func (x *Check_Constraint) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type isCheck_Constraint_Expectation interface {
	isCheck_Constraint_Expectation()
}

type Check_Constraint_LongExpectation struct {
	LongExpectation int64 `protobuf:"varint,2,opt,name=long_expectation,json=longExpectation,proto3,oneof"`
}

type Check_Constraint_DoubleExpectation struct {
	DoubleExpectation float64 `protobuf:"fixed64,3,opt,name=double_expectation,json=doubleExpectation,proto3,oneof"`
}

func (*Check_Constraint_LongExpectation) isCheck_Constraint_Expectation() {}

func (*Check_Constraint_DoubleExpectation) isCheck_Constraint_Expectation() {}

type AnomalyDetection_AnomalyCheckConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level         CheckLevel        `protobuf:"varint,1,opt,name=level,proto3,enum=com.ssinchenko.proto.CheckLevel" json:"level,omitempty"`
	Description   string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	WithTagValues map[string]string `protobuf:"bytes,3,rep,name=with_tag_values,json=withTagValues,proto3" json:"with_tag_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AfterDate     *int64            `protobuf:"varint,4,opt,name=after_date,json=afterDate,proto3,oneof" json:"after_date,omitempty"`
	BeforeDate    *int64            `protobuf:"varint,5,opt,name=before_date,json=beforeDate,proto3,oneof" json:"before_date,omitempty"`
}

func (x *AnomalyDetection_AnomalyCheckConfig) Reset() {
	*x = AnomalyDetection_AnomalyCheckConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyDetection_AnomalyCheckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyDetection_AnomalyCheckConfig) ProtoMessage() {}

func (x *AnomalyDetection_AnomalyCheckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyDetection_AnomalyCheckConfig.ProtoReflect.Descriptor instead.
func (*AnomalyDetection_AnomalyCheckConfig) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AnomalyDetection_AnomalyCheckConfig) GetLevel() CheckLevel {
	if x != nil {
		return x.Level
	}
	return CheckLevel_Error
}

func (x *AnomalyDetection_AnomalyCheckConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AnomalyDetection_AnomalyCheckConfig) GetWithTagValues() map[string]string {
	if x != nil {
		return x.WithTagValues
	}
	return nil
}

func (x *AnomalyDetection_AnomalyCheckConfig) GetAfterDate() int64 {
	if x != nil && x.AfterDate != nil {
		return *x.AfterDate
	}
	return 0
}

func (x *AnomalyDetection_AnomalyCheckConfig) GetBeforeDate() int64 {
	if x != nil && x.BeforeDate != nil {
		return *x.BeforeDate
	}
	return 0
}

type VerificationSuite_FileSystemRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *VerificationSuite_FileSystemRepository) Reset() {
	*x = VerificationSuite_FileSystemRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSuite_FileSystemRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSuite_FileSystemRepository) ProtoMessage() {}

func (x *VerificationSuite_FileSystemRepository) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSuite_FileSystemRepository.ProtoReflect.Descriptor instead.
func (*VerificationSuite_FileSystemRepository) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{2, 0}
}

func (x *VerificationSuite_FileSystemRepository) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type VerificationSuite_SparkTableRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *VerificationSuite_SparkTableRepository) Reset() {
	*x = VerificationSuite_SparkTableRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSuite_SparkTableRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSuite_SparkTableRepository) ProtoMessage() {}

func (x *VerificationSuite_SparkTableRepository) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSuite_SparkTableRepository.ProtoReflect.Descriptor instead.
func (*VerificationSuite_SparkTableRepository) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{2, 1}
}

func (x *VerificationSuite_SparkTableRepository) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type VerificationSuite_ResultKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetDate int64             `protobuf:"varint,1,opt,name=dataset_date,json=datasetDate,proto3" json:"dataset_date,omitempty"`
	Tags        map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VerificationSuite_ResultKey) Reset() {
	*x = VerificationSuite_ResultKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_suite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSuite_ResultKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSuite_ResultKey) ProtoMessage() {}

func (x *VerificationSuite_ResultKey) ProtoReflect() protoreflect.Message {
	mi := &file_suite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSuite_ResultKey.ProtoReflect.Descriptor instead.
func (*VerificationSuite_ResultKey) Descriptor() ([]byte, []int) {
	return file_suite_proto_rawDescGZIP(), []int{2, 2}
}

func (x *VerificationSuite_ResultKey) GetDatasetDate() int64 {
	if x != nil {
		return x.DatasetDate
	}
	return 0
}

func (x *VerificationSuite_ResultKey) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_suite_proto protoreflect.FileDescriptor

var file_suite_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x04, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x40, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63,
	0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xb9,
	0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a,
	0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52,
	0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x10, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x12, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x11, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e,
	0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x69, 0x6e,
	0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x06, 0x0a, 0x02,
	0x47, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x06, 0x0a,
	0x02, 0x45, 0x51, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x45, 0x54, 0x10, 0x04, 0x22, 0xb1, 0x05, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6d, 0x61,
	0x6c, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x1a, 0x61,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x18, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x08, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e,
	0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6f,
	0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e,
	0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x1a, 0x8f, 0x03,
	0x0a, 0x12, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68,
	0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74,
	0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73,
	0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x40,
	0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8e, 0x07, 0x0a, 0x11, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x4d,
	0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x73, 0x12, 0x74, 0x0a,
	0x16, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x14, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x74, 0x0a, 0x16, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68,
	0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x70, 0x61,
	0x72, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x14, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x55, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79,
	0x48, 0x02, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x55, 0x0a, 0x12, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2a, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x1a, 0x35, 0x0a, 0x14, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xb8, 0x01, 0x0a, 0x09, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2a, 0x24, 0x0a, 0x0a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10,
	0x01, 0x42, 0xac, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73,
	0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0a,
	0x53, 0x75, 0x69, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x0d,
	0x74, 0x73, 0x75, 0x6d, 0x75, 0x67, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa0, 0x01, 0x01,
	0xa2, 0x02, 0x03, 0x43, 0x53, 0x50, 0xaa, 0x02, 0x14, 0x43, 0x6f, 0x6d, 0x2e, 0x53, 0x73, 0x69,
	0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02, 0x14,
	0x43, 0x6f, 0x6d, 0x5c, 0x53, 0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x5c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0xe2, 0x02, 0x20, 0x43, 0x6f, 0x6d, 0x5c, 0x53, 0x73, 0x69, 0x6e, 0x63,
	0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x53,
	0x73, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_suite_proto_rawDescOnce sync.Once
	file_suite_proto_rawDescData = file_suite_proto_rawDesc
)

func file_suite_proto_rawDescGZIP() []byte {
	file_suite_proto_rawDescOnce.Do(func() {
		file_suite_proto_rawDescData = protoimpl.X.CompressGZIP(file_suite_proto_rawDescData)
	})
	return file_suite_proto_rawDescData
}

var file_suite_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_suite_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_suite_proto_goTypes = []any{
	(CheckLevel)(0),                             // 0: com.ssinchenko.proto.CheckLevel
	(Check_ComparisonSign)(0),                   // 1: com.ssinchenko.proto.Check.ComparisonSign
	(*Check)(nil),                               // 2: com.ssinchenko.proto.Check
	(*AnomalyDetection)(nil),                    // 3: com.ssinchenko.proto.AnomalyDetection
	(*VerificationSuite)(nil),                   // 4: com.ssinchenko.proto.VerificationSuite
	(*Check_Constraint)(nil),                    // 5: com.ssinchenko.proto.Check.Constraint
	(*AnomalyDetection_AnomalyCheckConfig)(nil), // 6: com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig
	nil, // 7: com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig.WithTagValuesEntry
	(*VerificationSuite_FileSystemRepository)(nil), // 8: com.ssinchenko.proto.VerificationSuite.FileSystemRepository
	(*VerificationSuite_SparkTableRepository)(nil), // 9: com.ssinchenko.proto.VerificationSuite.SparkTableRepository
	(*VerificationSuite_ResultKey)(nil),            // 10: com.ssinchenko.proto.VerificationSuite.ResultKey
	nil,                                            // 11: com.ssinchenko.proto.VerificationSuite.ResultKey.TagsEntry
	(*AnomalyDetectionStrategy)(nil),               // 12: com.ssinchenko.proto.AnomalyDetectionStrategy
	(*Analyzer)(nil),                               // 13: com.ssinchenko.proto.Analyzer
}
var file_suite_proto_depIdxs = []int32{
	0,  // 0: com.ssinchenko.proto.Check.checkLevel:type_name -> com.ssinchenko.proto.CheckLevel
	5,  // 1: com.ssinchenko.proto.Check.constraints:type_name -> com.ssinchenko.proto.Check.Constraint
	12, // 2: com.ssinchenko.proto.AnomalyDetection.anomaly_detection_strategy:type_name -> com.ssinchenko.proto.AnomalyDetectionStrategy
	13, // 3: com.ssinchenko.proto.AnomalyDetection.analyzer:type_name -> com.ssinchenko.proto.Analyzer
	6,  // 4: com.ssinchenko.proto.AnomalyDetection.config:type_name -> com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig
	2,  // 5: com.ssinchenko.proto.VerificationSuite.checks:type_name -> com.ssinchenko.proto.Check
	13, // 6: com.ssinchenko.proto.VerificationSuite.required_analyzers:type_name -> com.ssinchenko.proto.Analyzer
	8,  // 7: com.ssinchenko.proto.VerificationSuite.file_system_repository:type_name -> com.ssinchenko.proto.VerificationSuite.FileSystemRepository
	9,  // 8: com.ssinchenko.proto.VerificationSuite.spark_table_repository:type_name -> com.ssinchenko.proto.VerificationSuite.SparkTableRepository
	10, // 9: com.ssinchenko.proto.VerificationSuite.result_key:type_name -> com.ssinchenko.proto.VerificationSuite.ResultKey
	3,  // 10: com.ssinchenko.proto.VerificationSuite.anomaly_detections:type_name -> com.ssinchenko.proto.AnomalyDetection
	13, // 11: com.ssinchenko.proto.Check.Constraint.analyzer:type_name -> com.ssinchenko.proto.Analyzer
	1,  // 12: com.ssinchenko.proto.Check.Constraint.sign:type_name -> com.ssinchenko.proto.Check.ComparisonSign
	0,  // 13: com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig.level:type_name -> com.ssinchenko.proto.CheckLevel
	7,  // 14: com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig.with_tag_values:type_name -> com.ssinchenko.proto.AnomalyDetection.AnomalyCheckConfig.WithTagValuesEntry
	11, // 15: com.ssinchenko.proto.VerificationSuite.ResultKey.tags:type_name -> com.ssinchenko.proto.VerificationSuite.ResultKey.TagsEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_suite_proto_init() }
func file_suite_proto_init() {
	if File_suite_proto != nil {
		return
	}
	file_analyzers_proto_init()
	file_strategies_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_suite_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationSuite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Check_Constraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyDetection_AnomalyCheckConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationSuite_FileSystemRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationSuite_SparkTableRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_suite_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationSuite_ResultKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_suite_proto_msgTypes[1].OneofWrappers = []any{}
	file_suite_proto_msgTypes[2].OneofWrappers = []any{
		(*VerificationSuite_FileSystemRepository_)(nil),
		(*VerificationSuite_SparkTableRepository_)(nil),
	}
	file_suite_proto_msgTypes[3].OneofWrappers = []any{
		(*Check_Constraint_LongExpectation)(nil),
		(*Check_Constraint_DoubleExpectation)(nil),
	}
	file_suite_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_suite_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_suite_proto_goTypes,
		DependencyIndexes: file_suite_proto_depIdxs,
		EnumInfos:         file_suite_proto_enumTypes,
		MessageInfos:      file_suite_proto_msgTypes,
	}.Build()
	File_suite_proto = out.File
	file_suite_proto_rawDesc = nil
	file_suite_proto_goTypes = nil
	file_suite_proto_depIdxs = nil
}
